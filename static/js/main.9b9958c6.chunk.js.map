{"version":3,"sources":["BooksAPI.js","components/Mover.js","components/Book.js","components/Shelf.js","components/AllShelves.js","components/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Mover","_this","this","currentShelf","books","props","display","book","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","id","shelf","err","return","react_default","a","createElement","className","onChange","e","action","target","disabled","React","Component","Book","coverStyle","width","height","backgroundImage","imageLinks","thumbnail","style","components_Mover","title","author","Shelf","map","key","components_Book","AllShelves","currentlyReading","filter","wantToRead","read","components_Shelf","Search","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","results","query","error","handleChange","bind","assertThisInitialized","event","_this2","setState","fetch","concat","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","BooksAPI","length","_this3","onClick","close","type","placeholder","BooksApp","handleMove","searchClose","showSearchPage","getBooks","copyBooks","slice","includes","console","log","push","bookID","index","findIndex","movingBook","splice","catch","components_Search","components_AllShelves","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b9958c6.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\n\nclass Mover extends React.Component {\n\n\trender() {\n\n\t\tlet currentShelf = 'none';\n\t\tconst books = this.props.books;\n\t\tconst display = this.props.book;\n\n\t\tfor (let book of books) {\n\t\t\tif (display.id === book.id){\n\t\t\tcurrentShelf = book.shelf;\n\t\t\tbreak;\n\t\t\t}\n\t\t} \n\n\n\t\treturn (\n\t\t\t<div className=\"book-shelf-changer\">\n              <select value={currentShelf} onChange={(e) => this.props.action(this.props.book, e.target.value)}>\n                <option value=\"move\" disabled>Move to...</option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n         )\n\t}\n}\n\nexport default Mover;","import React from 'react';\nimport Mover from './Mover.js';\n\nclass Book extends React.Component {\n\n  render() {\n    const book = this.props.book;\n    let bgImage = '';\n\n    if (typeof book.imageLinks === 'undefined') {\n      bgImage = 'none';\n    } else {\n      bgImage = 'url(' + book.imageLinks.thumbnail + ')';\n    }\n\n    const coverStyle = {\n      width: 128, \n      height: 193, \n      backgroundImage: bgImage\n    }\n\n  \treturn (\n  \t\t<div className=\"book\">\n          <div className=\"book-top\">\n            <div className=\"book-cover\" style={coverStyle}>\n            </div>\n            <Mover\n              books={this.props.books}\n              book={this.props.book}\n              action={this.props.action} \n            />\n          </div>\n          <div className=\"book-title\">{book.title}</div>\n          <div className=\"book-authors\">{book.author}</div>\n        </div>\n        )\n  }\n}\n\nexport default Book;","import React from 'react';\nimport Book from './Book.js';\n\n\nclass Shelf extends React.Component {\n\n  render() {\n\t return (\n  \t<div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{this.props.title}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {this.props.books.map(book => \n            <li key={book.id}>\n              <Book \n                book={book}\n                books={this.props.books}\n                action={this.props.action} \n                />\n            </li>\n            )}\n        </ol>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Shelf;","import React from 'react';\nimport Shelf from './Shelf.js';\n\nfunction AllShelves(props) {\n\n    const books = props.books;\n    let currentlyReading = books.filter((book) => book.shelf === 'currentlyReading');\n    let wantToRead = books.filter((book) => book.shelf === 'wantToRead');\n    let read = books.filter((book) => book.shelf === 'read');\n\n    return (\n      <div className=\"list-books-content\">\n        <div>\n          <Shelf\n            books={currentlyReading} \n            title={'Currently Reading'}\n            filter={'currentlyReading'}\n            action={props.action} \n          />\n          <Shelf \n            books={wantToRead}\n            title={'Want to Read'}\n            filter={'wantToRead'}\n            action={props.action} \n            />\n          <Shelf \n            books={read}\n            title={'Read'}\n            filter={'read'}\n            action={props.action} \n            />\n        </div>\n      </div>\n    )\n  }\n\nexport default AllShelves;","import React from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport Book from './Book'\n\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      results: [],\n      query: '',\n      error: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    const query = event.target.value;\n    this.setState({query: query});\n\n    if (query) {\n      BooksAPI.search(query)\n      .then(books => {\n        if (books.length > 0) {\n          this.setState({results: books});\n        } else {\n          this.setState({results: []});\n          this.setState({error: true});\n          }\n        })\n      }\n    }\n\nrender() {\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <button className=\"close-search\" onClick={this.props.close}>Close</button>\n        <div className=\"search-books-input-wrapper\">\n          <input \n          type=\"text\" \n          placeholder=\"Search by title or author\"\n          value={this.state.query}\n          onChange={this.handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        {this.state.results.length > 0 && (\n        <ol className=\"books-grid\">\n         {this.state.results.map(book => \n            <li key={book.id}>\n              <Book \n                book={book}\n                books={this.props.books}\n                action={this.props.action} \n                results={this.state.results}\n                />\n            </li>\n            )}\n        </ol>\n        )}\n        {this.state.error && (\n          <h3>No results found.</h3>\n          )}\n      </div>\n    </div>\n  )\n}\n}\n\nexport default Search;","import React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport AllShelves from './components/AllShelves.js';\nimport Search from './components/Search.js';\n\nclass BooksApp extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleMove = this.handleMove.bind(this);\n    this.searchClose = this.searchClose.bind(this);\n    this.state = {\n      showSearchPage: false,\n      books: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  handleMove(book, shelf) {\n    //copy and edit local book list for fast render while async in background\n\n    // copy so can manipulate before setting state\n    let copyBooks = this.state.books.slice();\n\n    // add books from search results if not already found\n    if (copyBooks.includes(book)) {\n      console.log('book already included');\n    } else {\n      copyBooks.push(book);\n    }\n\n    // identify book and move shelf in our copy\n    const bookID = book.id;\n    const index = copyBooks.findIndex(book => book.id === bookID);\n    const movingBook = copyBooks[index];\n      movingBook.shelf = shelf;\n      copyBooks.splice(index, 1, movingBook);\n\n    // update state\n    this.setState ({ books: copyBooks })\n    // call API\n    BooksAPI.update(book, shelf)\n     .catch(function(error) {\n        console.log(\"failed API book move\", error); \n    })\n  }\n\n  getBooks() {\n    BooksAPI.getAll()\n      .then(books => this.setState({books: books}))\n      .catch(function(error) {\n        console.log(\"failed book fetch\", error);\n      })\n  }\n\n  searchClose() {\n    this.setState({showSearchPage: false});\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <Search \n            close={this.searchClose}\n            action={this.handleMove}\n            books={this.state.books}\n            />\n        ) : (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <AllShelves \n            books={this.state.books}\n            action={this.handleMove}\n            />\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n          )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}